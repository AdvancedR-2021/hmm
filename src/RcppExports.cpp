// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// backward_prob_cpp
NumericMatrix backward_prob_cpp(NumericMatrix Gamma, NumericMatrix p);
RcppExport SEXP _hmm_backward_prob_cpp(SEXP GammaSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(backward_prob_cpp(Gamma, p));
    return rcpp_result_gen;
END_RCPP
}
// forward_prob_cpp
NumericMatrix forward_prob_cpp(NumericMatrix Gamma, NumericMatrix p, NumericVector delta);
RcppExport SEXP _hmm_forward_prob_cpp(SEXP GammaSEXP, SEXP pSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Gamma(GammaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(forward_prob_cpp(Gamma, p, delta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hmm_backward_prob_cpp", (DL_FUNC) &_hmm_backward_prob_cpp, 2},
    {"_hmm_forward_prob_cpp", (DL_FUNC) &_hmm_forward_prob_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_hmm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
